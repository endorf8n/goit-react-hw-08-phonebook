{"version":3,"file":"static/js/637.a258d7c5.chunk.js","mappings":"4OA8EA,UA/DkB,WAChB,OAAsCA,EAAAA,EAAAA,UAAS,CAC7CC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAoBC,EAApB,KAKMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdN,GAAe,SAAAO,GAAI,yBACdA,GADc,cAEhBF,EAAOC,GAFS,GAIpB,EAeD,OACE,UAAC,KAAD,CAAYE,SAdO,SAAAC,GACnBA,EAAEC,iBAEFT,GAASU,EAAAA,EAAAA,IAAWZ,IACjBa,SACAC,MAAK,kBAAMC,EAAAA,GAAAA,QAAA,gBAAN,IACLC,OAAM,kBACLD,EAAAA,GAAAA,MACE,iEAFG,GAKV,EAGC,WACE,SAAC,KAAD,UAAW,0BACX,UAAC,KAAD,YACE,SAAC,KAAD,UAAU,WACV,SAAC,KAAD,CACEE,KAAK,QACLX,KAAK,QACLC,MAAOP,EAAYF,MACnBoB,SAAUd,EACVe,YAAY,sBACZC,UAAQ,QAGZ,UAAC,KAAD,YACE,SAAC,KAAD,UAAU,cACV,SAAC,KAAD,CACEH,KAAK,WACLX,KAAK,WACLC,MAAOP,EAAYD,SACnBmB,SAAUd,EACVe,YAAY,yBACZC,UAAQ,QAGZ,SAAC,KAAD,CAASH,KAAK,SAAd,SAAuB,WAEvB,UAAC,KAAD,WAAS,2BACgB,SAAC,KAAD,CAAYI,GAAG,YAAf,SAA2B,kBAIzD,C,iRCzEYC,EAAaC,EAAAA,GAAAA,KAAH,oQAQV,qBAAGC,MAAkBC,QAAQ,EAA7B,IACF,qBAAGD,MAAkBC,QAAQ,GAA7B,IACQ,qBAAGD,MAAkBC,QAAQ,EAA7B,IACG,qBAAGD,MAAkBE,OAAOC,KAA5B,IAGTC,EAAYL,EAAAA,GAAAA,EAAH,wGACH,qBAAGC,MAAkBC,QAAQ,EAA7B,IAEJ,qBAAGD,MAAkBK,UAAUC,KAA/B,IACJ,qBAAGN,MAAkBE,OAAOK,IAA5B,IAGEC,EAAYT,EAAAA,GAAAA,MAAH,oHAEH,qBAAGC,MAAkBC,QAAQ,EAA7B,IACR,qBAAGD,MAAkBE,OAAOO,IAA5B,IACI,qBAAGT,MAAkBK,UAAUC,KAA/B,IAIFI,EAAWX,EAAAA,GAAAA,KAAH,oGAEF,qBAAGC,MAAkBC,QAAQ,EAA7B,IACJ,qBAAGD,MAAkBK,UAAUM,QAA/B,IACJ,qBAAGX,MAAkBE,OAAOK,IAA5B,IAGEK,EAAQb,EAAAA,GAAAA,MAAH,iQAGN,qBAAGC,MAAkBC,QAAQ,EAA7B,IACO,qBAAGD,MAAkBC,QAAQ,EAA7B,IAIC,qBAAGD,MAAkBE,OAAOW,IAA5B,IAKPC,EAAUf,EAAAA,GAAAA,OAAH,+QAEL,qBAAGC,MAAkBK,UAAUM,QAA/B,IAEH,qBAAGX,MAAkBC,QAAQ,EAA7B,IACO,qBAAGD,MAAkBC,QAAQ,EAA7B,IAEG,qBAAGD,MAAkBE,OAAOK,IAA5B,IACX,qBAAGP,MAAkBE,OAAOC,KAA5B,IAGa,qBAAGH,MAAkBE,OAAOW,IAA5B,IACX,qBAAGb,MAAkBE,OAAOa,MAA5B,IAIAC,EAAUjB,EAAAA,GAAAA,EAAH,sGACH,qBAAGC,MAAkBC,QAAQ,EAA7B,IAEN,qBAAGD,MAAkBE,OAAOO,IAA5B,IACI,qBAAGT,MAAkBK,UAAUM,QAA/B,IAGFM,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,0DACZ,qBAAGC,MAAkBE,OAAOiB,QAA5B,IACI,qBAAGnB,MAAkBK,UAAUM,QAA/B,G","sources":["pages/LoginPage.jsx","pages/pagesStyles/loginregPage.styled.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/authOperations';\nimport { toast } from 'react-toastify';\nimport {\n  AskText,\n  FormBtn,\n  FormLabel,\n  FormStyled,\n  FormTitle,\n  Input,\n  LinkStyled,\n  SpanForm,\n} from './pagesStyles/loginregPage.styled';\n\nconst LoginPage = () => {\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChangeInput = ({ target }) => {\n    const { name, value } = target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(loginThunk(credentials))\n      .unwrap()\n      .then(() => toast.success(`Welcome back!`))\n      .catch(() =>\n        toast.error(\n          'You entered an incorrect password or email. Please, try again.'\n        )\n      );\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <FormTitle>Welcome to Phonebook</FormTitle>\n      <FormLabel>\n        <SpanForm>Email</SpanForm>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={credentials.email}\n          onChange={handleChangeInput}\n          placeholder=\"Enter your email...\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        <SpanForm>Password</SpanForm>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={credentials.password}\n          onChange={handleChangeInput}\n          placeholder=\"Enter your password...\"\n          required\n        />\n      </FormLabel>\n      <FormBtn type=\"submit\">Login</FormBtn>\n\n      <AskText>\n        Don't have an account? <LinkStyled to=\"/register\">Register</LinkStyled>\n      </AskText>\n    </FormStyled>\n  );\n};\n\nexport default LoginPage;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: ${({ theme }) => theme.spacing(8)};\n  width: ${({ theme }) => theme.spacing(80)};\n  border-radius: ${({ theme }) => theme.spacing(2)};\n  background-color: ${({ theme }) => theme.colors.white};\n`;\n\nexport const FormTitle = styled.p`\n  margin-bottom: ${({ theme }) => theme.spacing(8)};\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colors.dark};\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  margin-bottom: ${({ theme }) => theme.spacing(4)};\n  color: ${({ theme }) => theme.colors.gray};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  width: 100%;\n`;\n\nexport const SpanForm = styled.span`\n  display: block;\n  margin-bottom: ${({ theme }) => theme.spacing(2)};\n  font-size: ${({ theme }) => theme.fontSizes.smallest};\n  color: ${({ theme }) => theme.colors.dark};\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 98%;\n  height: ${({ theme }) => theme.spacing(8)};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  border: 1px solid #a0a9ba;\n  outline: 2px solid transparent;\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.blue};\n    box-shadow: 0 0 0 2px rgba(137, 207, 240, 0.9);\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: block;\n  font-size: ${({ theme }) => theme.fontSizes.smallest};\n  width: 100%;\n  height: ${({ theme }) => theme.spacing(8)};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  border-color: transparent;\n  background-color: ${({ theme }) => theme.colors.dark};\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.blue};\n    color: ${({ theme }) => theme.colors.violet};\n  }\n`;\n\nexport const AskText = styled.p`\n  padding-top: ${({ theme }) => theme.spacing(3)};\n  text-align: center;\n  color: ${({ theme }) => theme.colors.gray};\n  font-size: ${({ theme }) => theme.fontSizes.smallest};\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: ${({ theme }) => theme.colors.lightRed};\n  font-size: ${({ theme }) => theme.fontSizes.smallest};\n`;\n"],"names":["useState","email","password","credentials","setCredentials","dispatch","useDispatch","handleChangeInput","target","name","value","prev","onSubmit","e","preventDefault","loginThunk","unwrap","then","toast","catch","type","onChange","placeholder","required","to","FormStyled","styled","theme","spacing","colors","white","FormTitle","fontSizes","small","dark","FormLabel","gray","SpanForm","smallest","Input","blue","FormBtn","violet","AskText","LinkStyled","Link","lightRed"],"sourceRoot":""}